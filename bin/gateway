#!/usr/bin/env python3

from optparse import OptionParser
import subprocess

class Route(object):
    def __init__(self, routeline):
        #route -n -> Destination, Gateway, Genmask, Flags, Metric, Ref, Use, Iface
        (self.dest, self.gateway, self.mask, _, _, _, _, self.interface) = [v for v in routeline.split(" ") if v]

    @staticmethod
    def map(routelines):
        routes = []
        for line in routelines:
            route = Route(line)
            if route.dest == "0.0.0.0" and route.gateway != "0.0.0.0":
                routes.append(route)
        return routes


routedata = subprocess.getoutput("route -n").split('\n')[2:]
routes = Route.map(routedata)
interfaces = [route.interface for route in routes]

parser = OptionParser()
parser.add_option("-i", "--iface",
                  dest="iface",
                  choices=interfaces,
                  help=f"Show for single interface")

(options, _) = parser.parse_args()
iface = options.iface

filterfn = \
        (lambda test: test.interface == iface) \
        if iface else None

for route in filter(filterfn, routes):
    print(route.interface, route.gateway)
